// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServicePortal.Infrastructure.Data;

#nullable disable

namespace ServicePortal.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250424085230_addTableLeaveRequestAndStep")]
    partial class addTableLeaveRequestAndStep
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ServicePortal.Domain.Entities.Department", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.Property<string>("Note")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("note");

                    b.Property<int?>("ParentId")
                        .HasColumnType("int")
                        .HasColumnName("parent_id");

                    b.HasKey("Id");

                    b.HasIndex("Id", "ParentId");

                    b.ToTable("departments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "IT/MIS",
                            Note = "IT"
                        });
                });

            modelBuilder.Entity("ServicePortal.Domain.Entities.Position", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("department_id");

                    b.Property<bool?>("IsGlobal")
                        .HasColumnType("bit")
                        .HasColumnName("is_global");

                    b.Property<int?>("Level")
                        .HasColumnType("int")
                        .HasColumnName("level");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("title");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("positions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            DepartmentId = 0,
                            IsGlobal = true,
                            Level = -2,
                            Name = "General Director",
                            Title = "General Director"
                        },
                        new
                        {
                            Id = 2,
                            DepartmentId = 0,
                            IsGlobal = true,
                            Level = -1,
                            Name = "Assistant General Director",
                            Title = "Assistant General Director"
                        },
                        new
                        {
                            Id = 3,
                            DepartmentId = 1,
                            IsGlobal = true,
                            Level = 0,
                            Name = "Superadmin",
                            Title = "Superadmin"
                        },
                        new
                        {
                            Id = 4,
                            DepartmentId = 1,
                            IsGlobal = false,
                            Level = 1,
                            Name = "Manager",
                            Title = "Manager IT/MIS"
                        });
                });

            modelBuilder.Entity("ServicePortal.Domain.Entities.RefreshToken", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<DateTimeOffset?>("CreatedAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("created_at");

                    b.Property<DateTimeOffset?>("ExpiresAt")
                        .HasColumnType("datetimeoffset")
                        .HasColumnName("expires_at");

                    b.Property<bool?>("IsRevoked")
                        .HasColumnType("bit")
                        .HasColumnName("is_revoked");

                    b.Property<string>("Token")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("token");

                    b.Property<string>("UserCode")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("user_code");

                    b.HasKey("Id");

                    b.HasIndex("Token", "UserCode", "ExpiresAt", "IsRevoked");

                    b.ToTable("refresh_tokens");
                });

            modelBuilder.Entity("ServicePortal.Domain.Entities.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.HasIndex("Id");

                    b.ToTable("roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "SuperAdmin"
                        },
                        new
                        {
                            Id = 2,
                            Name = "IT"
                        },
                        new
                        {
                            Id = 3,
                            Name = "HR"
                        },
                        new
                        {
                            Id = 4,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("ServicePortal.Domain.Entities.Team", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int?>("DepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("department_id");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("teams");
                });

            modelBuilder.Entity("ServicePortal.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<int?>("ChildDepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("child_department_id");

                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("code");

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("created_at");

                    b.Property<DateTime?>("DateJoinCompany")
                        .HasColumnType("datetime2")
                        .HasColumnName("date_join_company");

                    b.Property<DateTime?>("DateOfBirth")
                        .HasColumnType("datetime2")
                        .HasColumnName("date_of_birth");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("deleted_at");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("email");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit")
                        .HasColumnName("is_active");

                    b.Property<int?>("ManagementPositionId")
                        .HasColumnType("int")
                        .HasColumnName("management_position_id");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("name");

                    b.Property<int?>("ParentDepartmentId")
                        .HasColumnType("int")
                        .HasColumnName("parent_department_id");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("password");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("phone");

                    b.Property<int?>("PositionId")
                        .HasColumnType("int")
                        .HasColumnName("position_id");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("role_id");

                    b.Property<byte?>("Sex")
                        .HasColumnType("tinyint")
                        .HasColumnName("sex");

                    b.Property<int?>("TeamId")
                        .HasColumnType("int")
                        .HasColumnName("team_id");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2")
                        .HasColumnName("updated_at");

                    b.HasKey("Id");

                    b.HasIndex("Code", "Email", "Id");

                    b.ToTable("users");
                });
#pragma warning restore 612, 618
        }
    }
}
